// js/wallet.js

import {
  contractAddress,
  lpTokenAddress,
  kjcAddress,
  contractABI,
  erc20ABI,
  BSC_CHAIN_ID
} from './config.js';

import { getTokenDecimals } from './utils.js';

let web3;
let account = null;
let stakingContract;
let lpToken;
let kjcToken;
let lpTokenDecimals;
let kjcTokenDecimals;

function getCurrentAccount() {
  return account;
}

async function connectWallet() {
  if (window.ethereum) {
    web3 = new Web3(window.ethereum);
    try {
      await window.ethereum.request({ method: "eth_requestAccounts" });
      const accounts = await web3.eth.getAccounts();
      account = accounts[0];

      const chainId = await web3.eth.getChainId();
      if (chainId !== parseInt(BSC_CHAIN_ID, 16)) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° BNB Chain ‡∏Å‡πà‡∏≠‡∏ô (Chain ID: 56)");
        return false;
      }

      stakingContract = new web3.eth.Contract(contractABI, contractAddress);
      lpToken = new web3.eth.Contract(erc20ABI, lpTokenAddress);
      kjcToken = new web3.eth.Contract(erc20ABI, kjcAddress);

      // ‡∏î‡∏∂‡∏á‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°
      lpTokenDecimals = await getTokenDecimals(lpToken);
      kjcTokenDecimals = await getTokenDecimals(kjcToken);

      // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤
      document.getElementById("walletAddress").innerText =
        `üü¢ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß: ${account.substring(0, 6)}...${account.slice(-4)}`;

      return true;
    } catch (err) {
      alert("‚ùå ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");
      console.error(err);
      return false;
    }
  } else {
    alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á MetaMask ‡∏´‡∏£‡∏∑‡∏≠ Bitget Wallet");
    return false;
  }
}

// ‚úÖ Export ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏´‡πâ module ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
export {
  connectWallet,
  getCurrentAccount,
  stakingContract,
  lpToken,
  kjcToken,
  web3,
  lpTokenDecimals,
  kjcTokenDecimals
};

// ‚úÖ ‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö window ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏à‡∏≤‡∏Å HTML ‡∏õ‡∏Å‡∏ï‡∏¥‡πÑ‡∏î‡πâ
window.connectWallet = connectWallet;
